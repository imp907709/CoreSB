// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using order.Infrastructure.EF;

namespace mvccoresb.Migrations.Order
{
    [DbContext(typeof(OrderContext))]
    partial class OrderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("order.Domain.Models.Ordering.AdressDAL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("order.Domain.Models.Ordering.DeliveryItemDAL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<Guid?>("ParametersId");

                    b.HasKey("Id");

                    b.HasIndex("ParametersId");

                    b.ToTable("DeliveryItem");
                });

            modelBuilder.Entity("order.Domain.Models.Ordering.DeliveryItemParameterDAL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Depth");

                    b.Property<Guid?>("GeometryUnitId");

                    b.Property<float>("Height");

                    b.Property<float>("Lenght");

                    b.Property<float>("Weight");

                    b.Property<Guid?>("WeightUnitId");

                    b.HasKey("Id");

                    b.HasIndex("GeometryUnitId");

                    b.HasIndex("WeightUnitId");

                    b.ToTable("DeliveryItemParameters");
                });

            modelBuilder.Entity("order.Domain.Models.Ordering.MaterialUnitDAL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("MaterialUnit");
                });

            modelBuilder.Entity("order.Domain.Models.Ordering.OrderItemDAL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<float>("DeliveryPrice");

                    b.Property<Guid?>("FromId");

                    b.Property<Guid?>("ItmeId");

                    b.Property<string>("Name");

                    b.Property<Guid?>("ToId");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ItmeId");

                    b.HasIndex("ToId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("order.Domain.Models.Ordering.UnitsConvertionDAL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("ConvertionRate");

                    b.Property<Guid?>("FromId");

                    b.Property<Guid?>("ToId");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.ToTable("UnitsConvertion");
                });

            modelBuilder.Entity("order.Domain.Models.Ordering.DeliveryItemDAL", b =>
                {
                    b.HasOne("order.Domain.Models.Ordering.DeliveryItemParameterDAL", "Parameters")
                        .WithMany()
                        .HasForeignKey("ParametersId");
                });

            modelBuilder.Entity("order.Domain.Models.Ordering.DeliveryItemParameterDAL", b =>
                {
                    b.HasOne("order.Domain.Models.Ordering.MaterialUnitDAL", "GeometryUnit")
                        .WithMany()
                        .HasForeignKey("GeometryUnitId");

                    b.HasOne("order.Domain.Models.Ordering.MaterialUnitDAL", "WeightUnit")
                        .WithMany()
                        .HasForeignKey("WeightUnitId");
                });

            modelBuilder.Entity("order.Domain.Models.Ordering.OrderItemDAL", b =>
                {
                    b.HasOne("order.Domain.Models.Ordering.AdressDAL", "From")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("order.Domain.Models.Ordering.DeliveryItemDAL", "Itme")
                        .WithMany()
                        .HasForeignKey("ItmeId");

                    b.HasOne("order.Domain.Models.Ordering.AdressDAL", "To")
                        .WithMany()
                        .HasForeignKey("ToId");
                });

            modelBuilder.Entity("order.Domain.Models.Ordering.UnitsConvertionDAL", b =>
                {
                    b.HasOne("order.Domain.Models.Ordering.MaterialUnitDAL", "From")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("order.Domain.Models.Ordering.MaterialUnitDAL", "To")
                        .WithMany()
                        .HasForeignKey("ToId");
                });
#pragma warning restore 612, 618
        }
    }
}
