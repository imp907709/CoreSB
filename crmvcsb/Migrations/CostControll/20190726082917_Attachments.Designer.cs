// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using crmvcsb.Infrastructure.EF.costControl;

namespace crmvcsb.Migrations.CostControll
{
    [DbContext(typeof(CostControllContext))]
    [Migration("20190726082917_Attachments")]
    partial class Attachments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("crmvcsb.Domain.TestModels.Models.CostControl.BusinessColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Business_Column")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnName("Code");

                    b.Property<string>("Comment")
                        .HasColumnName("Code");

                    b.Property<string>("Name")
                        .HasColumnName("Name");

                    b.Property<string>("ShortName")
                        .HasColumnName("ShortName");

                    b.Property<int>("StatusId")
                        .HasColumnName("Status_Id");

                    b.Property<string>("UseInPaymentsRequest")
                        .HasColumnName("Is_Use_In_Request");

                    b.HasKey("Id");

                    b.ToTable("Business_Columns","dic");
                });

            modelBuilder.Entity("crmvcsb.Domain.TestModels.Models.CostControl.BusinessLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Business_Line")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusinessColumnId");

                    b.Property<string>("Code")
                        .HasColumnName("Code");

                    b.Property<string>("Comment")
                        .HasColumnName("Code");

                    b.Property<string>("Name")
                        .HasColumnName("Name");

                    b.Property<string>("ShortName")
                        .HasColumnName("ShortName");

                    b.Property<int>("StatusId")
                        .HasColumnName("Status_Id");

                    b.Property<string>("UseInPaymentsRequest")
                        .HasColumnName("Is_Use_In_Request");

                    b.HasKey("Id");

                    b.HasIndex("BusinessColumnId");

                    b.ToTable("Business_Lines","dic");
                });

            modelBuilder.Entity("crmvcsb.Domain.TestModels.Models.CostControl.CorporateCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Corporate_Card")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnName("Account_Number");

                    b.Property<string>("Comment")
                        .HasColumnName("Comment");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnName("Created_At");

                    b.Property<int?>("CreatedBy")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("DateClose")
                        .HasColumnName("Date_Close");

                    b.Property<DateTime>("DateOpen")
                        .HasColumnName("Date_Open");

                    b.Property<int?>("IdCurrency")
                        .HasColumnName("Id_Currency");

                    b.Property<int>("IdIndividualPerson")
                        .HasColumnName("Id_Individual_Person");

                    b.Property<int>("IdStatus")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("Id_Status");

                    b.Property<bool>("IsUseInRequest")
                        .HasColumnName("Is_Use_In_Request");

                    b.Property<decimal?>("Limit")
                        .HasColumnName("Limit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnName("Modified_At");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnName("Modified_By");

                    b.HasKey("Id");

                    b.ToTable("Corporate_Card","dic");
                });

            modelBuilder.Entity("crmvcsb.Domain.TestModels.Models.CostControl.Dictionary", b =>
                {
                    b.Property<int>("IdDictionary")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Dictionary")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("Name");

                    b.HasKey("IdDictionary");

                    b.ToTable("Dictionary","dic");
                });

            modelBuilder.Entity("crmvcsb.Domain.TestModels.Models.CostControl.DictionaryAttachment", b =>
                {
                    b.Property<long>("IdDictionaryAttachment")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Dictionary_Attachment")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CorporateCardId");

                    b.Property<bool>("Deleted")
                        .HasColumnName("Deleted");

                    b.Property<string>("DictionaryType")
                        .HasColumnName("Dictionary_Type");

                    b.Property<int?>("IdAttachmentKind")
                        .HasColumnName("Id_Attachment_Kind");

                    b.Property<long?>("IdFile")
                        .HasColumnName("Id_File");

                    b.Property<string>("LinkName")
                        .HasColumnName("Link_Name");

                    b.Property<string>("LinkUrl")
                        .HasColumnName("Link_Url");

                    b.Property<byte[]>("Rowversion")
                        .HasColumnName("Rowversion");

                    b.HasKey("IdDictionaryAttachment");

                    b.HasIndex("CorporateCardId");

                    b.ToTable("Dictionary_Attachment","dds");
                });

            modelBuilder.Entity("crmvcsb.Domain.TestModels.Models.CostControl.DictionaryToDictionaryAttachment", b =>
                {
                    b.Property<long>("Id_Dictionary_Dictionary_Attachment")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Dictionary_Dictionary_Attachment")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Id_Attachment")
                        .HasColumnName("Id_Attachment");

                    b.Property<int>("Id_Dictinary_Type")
                        .HasColumnName("Id_Dictinary_Type");

                    b.HasKey("Id_Dictionary_Dictionary_Attachment");

                    b.HasIndex("Id_Attachment");

                    b.HasIndex("Id_Dictinary_Type");

                    b.ToTable("Dictionary_Dictionary_Attachment","dds");
                });

            modelBuilder.Entity("crmvcsb.Domain.TestModels.Models.CostControl.BusinessLine", b =>
                {
                    b.HasOne("crmvcsb.Domain.TestModels.Models.CostControl.BusinessColumn", "BusinessColumn")
                        .WithMany("BusinessLines")
                        .HasForeignKey("BusinessColumnId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("crmvcsb.Domain.TestModels.Models.CostControl.DictionaryAttachment", b =>
                {
                    b.HasOne("crmvcsb.Domain.TestModels.Models.CostControl.CorporateCard")
                        .WithMany("Attachments")
                        .HasForeignKey("CorporateCardId");
                });

            modelBuilder.Entity("crmvcsb.Domain.TestModels.Models.CostControl.DictionaryToDictionaryAttachment", b =>
                {
                    b.HasOne("crmvcsb.Domain.TestModels.Models.CostControl.DictionaryAttachment", "DictionaryAttachment")
                        .WithMany("Attachments")
                        .HasForeignKey("Id_Attachment")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("crmvcsb.Domain.TestModels.Models.CostControl.Dictionary", "Dictionary")
                        .WithMany("Attachments")
                        .HasForeignKey("Id_Dictinary_Type")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
